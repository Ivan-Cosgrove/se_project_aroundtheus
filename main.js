!function(){"use strict";class e{constructor(e,t,r,o,i){let{name:n,link:s,_id:a,isLiked:c}=e;this.name=n,this.link=s,this._id=a,this.isLiked=c,this._template=t,this._viewImage=r,this._handleDelete=o,this._sendLike=i}_toggleLike(){this._cardElement.querySelector(".card__button-like").classList.toggle("card__button_clicked")}_removeCard(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){const e=this._cardElement.querySelector(".card__button-like"),t=this._cardElement.querySelector(".card__button-delete"),r=this._cardElement.querySelector(".card__image");e.addEventListener("click",(()=>{this._toggleLike(),this._sendLike(this)})),t.addEventListener("click",(()=>(this._handleDelete(this),this._cardElement))),r.addEventListener("click",(()=>{this._viewImage(this)}))}createCard(){this._template=document.querySelector(this._template).content,this._cardElement=this._template.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__title"),t=this._cardElement.querySelector(".card__image"),r=this.name,o=this.link,i=this._id;return e.textContent=r,t.src=o,t.alt=r,this._cardElement.id=i,this._cardElement.isLiked=this.isLiked,this._cardElement.isLiked?this._cardElement.querySelector(".card__button-like").classList.add("card__button_clicked"):this._cardElement.querySelector(".card__button-like").classList.remove("card__button_clicked"),this._setEventListeners(),this._cardElement}}class t{constructor(e){let{popup:t}=e;this._popup=t}_handleEscClose=e=>{"Escape"===e.key&&this.close()};open(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("modal-box_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("modal-box_opened")}setEventListeners(){this._popup.querySelector(".modal-box__close-button").addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("click",(e=>{e.target.classList.contains("modal-box_opened")&&this.close()}))}}class r extends t{constructor(e,t){super({popup:e}),this._popupForm=this._popup.querySelector(".form"),this._formSubmit=t}_getInputValues(){const e=this._popup.querySelectorAll(".form__input"),t={};return e.forEach((e=>{let{name:r,value:o}=e;t[r]=o})),t}close(){this._popupForm.reset(),super.close()}setEventListeners(){const e=this._popupForm.querySelector(".form__button");this._popupForm.addEventListener("submit",(t=>{t.preventDefault(),e.textContent="Saving...",this._formSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}}class o{constructor(e,t){this._config=e,this._form=t}_hideError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.remove(this._config.error),e.classList.remove(this._config.inputError),t.textContent=""}_showError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.add(this._config.error),e.classList.add(this._config.inputError),t.textContent=e.validationMessage}_toggleInputErrors(e){e.validity.valid?this._hideError(e):this._showError(e)}_disableSubmit(){const e=this._form.querySelector(this._config.submitButton);e.setAttribute("disabled",!0),e.classList.add(this._config.inactiveButton)}_enableSubmit(){const e=this._form.querySelector(this._config.submitButton);e.removeAttribute("disabled"),e.classList.remove(this._config.inactiveButton)}_checkForInvalidInput(){return[...this._form.querySelectorAll(this._config.input)].some((e=>!e.validity.valid))}toggleSubmitButton(){this._checkForInvalidInput()?this._disableSubmit():this._enableSubmit()}_setEventListeners(){[...this._form.querySelectorAll(this._config.input)].forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputErrors(e),this.toggleSubmitButton()}))}))}enableValidation(){this._setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault()}))}}class i{constructor(e,t){let{items:r,renderer:o}=e;this._renderedItems=r,this._renderer=o,this.cardBin=t}renderItems(){this._renderedItems.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this.cardBin.prepend(e)}}document.querySelector(".cards__list");const n=document.querySelector("#edit-profile"),s=document.querySelector("#add-card"),a=(n.querySelector(".modal-box__close-button"),s.querySelector(".modal-box__close-button"));document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),n.querySelector(".form__input_type_name"),n.querySelector(".form__input_type_description"),a.closest(".form");const c=document.querySelector("#edit-profile"),d=document.querySelector(".profile__title"),l=document.querySelector(".profile__subtitle"),u=document.querySelector("#add-card"),_=document.querySelector(".cards__list"),m=document.querySelector(".profile__buttons-edit"),h=document.querySelector(".profile__buttons-add"),p=document.querySelector("#display-image"),f=p.querySelector(".modal-box__image"),b=document.querySelector(".form__input_type_name"),v=document.querySelector(".form__input_type_description"),y=document.querySelector(".profile__image"),S=document.querySelector("#change-avatar"),E=document.querySelector(".profile__buttons-image-edit"),g=document.querySelector("#delete-modal"),L=(document.querySelector("#delete-name"),document.querySelector("#delete-link"),document.querySelector("#delete-id")),q={editModal:"#edit-profile",addModal:"#add-card",changeAvatar:"#change-avatar",name:".profile__title",description:".profile__subtitle",form:".form",input:".form__input",submitButton:".form__button",inactiveButton:"form__button_disabled",inputError:"form__input_invalid",error:"form__error_visible"},k=new class{constructor(e){this._options=e}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}submitUserInfo(e){fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"POST",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"}}).then(JSON.stringify(e))}updateUserInfo(e){fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{"content-type":"application/JSON",authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"},body:JSON.stringify(e)})}updateProfilePicture(e){fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(e)})}sendCard(e){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{"content-type":"application/JSON",authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"},body:JSON.stringify(e)})}deleteCard(e,t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}`,{method:"DELETE",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(t)})}likeCard(e,t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"PUT",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(t)})}removeLike(e,t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"DELETE",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(t)})}}(q);let I;k.getUserInfo().then((e=>{B.setUserInfo(e),y.src=e.avatar})),k.getInitialCards().then((t=>{I=new i({items:t,renderer:t=>{I.addItem(function(t){return new e(t,"#card",x,O,N).createCard()}(t))}},_),I.renderItems()}));const C=new class extends t{constructor(e,t){super({popup:e}),this._image=t}open(e){const t=this._popup.querySelector(".modal-box__image"),r=this._popup.querySelector(".modal-box__caption"),o=e.name,i=e.link;return r.textContent=o,t.src=i,t.alt=`Preview image for ${o}`,super.open(),e}}(p,f);C.setEventListeners();const x=e=>{C.open(e)},w=new r(g,(e=>{k.deleteCard(e._id,e)}));w.setEventListeners();const O=e=>{w.open(),L.value=e._id};function N(e){e.isLiked?k.removeLike(e._id,e):k.likeCard(e._id,e)}const B=new class{constructor(e){let{name:t,about:r}=e;this._name=t,this._about=r}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}}({name:d,about:l}),J=new r(u,(e=>{k.sendCard(e)}));J.setEventListeners();const P=new r(S,(e=>{k.updateProfilePicture(e)}));P.setEventListeners();const U=new r(c,(e=>{k.updateUserInfo(e)}));U.setEventListeners(),m.addEventListener("click",(function(){U.open();const e=B.getUserInfo();b.value=e.name,v.value=e.about,A.toggleSubmitButton()}));const z=new o(q,S);z.enableValidation(),E.addEventListener("click",(()=>{P.open(),z.toggleSubmitButton()})),h.addEventListener("click",(function(){J.open(),$.toggleSubmitButton()}));const A=new o(q,c);A.enableValidation();const $=new o(q,u);$.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUlzQixxQkFBcUJOLEVBQUssSUFFaEMwQixFQUFZckgsb0JBZ0JaLE1BQU1zRCxFQUFlLElBQUluRCxFQUFjb0csR0FBeUJaLElBQzlEaEIsRUFBSW9CLGVBQWVKLEVBQUssSUFFMUJyQyxFQUFhdEQsb0JBQ2J1RyxFQUFBQSxpQkFBc0MsU0FBUyxXQUM3Q2pELEVBQWF4RCxPQUNiLE1BQU13SCxFQUFjWixFQUFTakIsY0FDN0JjLEVBQUFBLE1BQTRCZSxFQUFZakssS0FDeENrSixFQUFBQSxNQUE0QmUsRUFBWUosTUFDeENLLEVBQWtCL0Usb0JBQ3BCLElBRUEsTUFBTWdGLEVBQXNCLElBQUl2RyxFQUM5QnNGLEVBQ0FBLEdBRUZpQixFQUFvQi9FLG1CQUVwQjhELEVBQUFBLGlCQUE4QyxTQUFTLEtBQ3JEYyxFQUFZdkgsT0FDWjBILEVBQW9CaEYsb0JBQW9CLElBRzFDK0QsRUFBQUEsaUJBQXFDLFNBQVMsV0FDNUNoRCxFQUFVekQsT0FDVjJILEVBQWlCakYsb0JBQ25CLElBQ0EsTUFBTStFLEVBQW9CLElBQUl0RyxFQUM1QnNGLEVBQ0FBLEdBRUZnQixFQUFrQjlFLG1CQUVYLE1BQU1nRixFQUFtQixJQUFJeEcsRUFDbENzRixFQUNBQSxHQUVGa0IsRUFBaUJoRixrQiIsInNvdXJjZXMiOlsid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXAuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3V0aWxpdHkvdXRpbGl0eS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvdXRpbGl0eS9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8vcHJhY3RpY3VtLy4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3ByYWN0aWN1bS8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly9wcmFjdGljdW0vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcclxuICBjb25zdHJ1Y3RvcihcclxuICAgIHsgbmFtZSwgbGluaywgX2lkLCBpc0xpa2VkIH0sXHJcbiAgICB0ZW1wbGF0ZSxcclxuICAgIHZpZXdJbWFnZSxcclxuICAgIGhhbmRsZURlbGV0ZSxcclxuICAgIHNlbmRMaWtlXHJcbiAgKSB7XHJcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xyXG4gICAgdGhpcy5saW5rID0gbGluaztcclxuICAgIHRoaXMuX2lkID0gX2lkO1xyXG4gICAgdGhpcy5pc0xpa2VkID0gaXNMaWtlZDtcclxuICAgIHRoaXMuX3RlbXBsYXRlID0gdGVtcGxhdGU7XHJcbiAgICB0aGlzLl92aWV3SW1hZ2UgPSB2aWV3SW1hZ2U7XHJcbiAgICB0aGlzLl9oYW5kbGVEZWxldGUgPSBoYW5kbGVEZWxldGU7XHJcbiAgICB0aGlzLl9zZW5kTGlrZSA9IHNlbmRMaWtlO1xyXG4gIH1cclxuXHJcbiAgX3RvZ2dsZUxpa2UoKSB7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19idXR0b24tbGlrZVwiKVxyXG4gICAgICAuY2xhc3NMaXN0LnRvZ2dsZShcImNhcmRfX2J1dHRvbl9jbGlja2VkXCIpO1xyXG4gIH1cclxuICBfcmVtb3ZlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnJlbW92ZSgpO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSBudWxsO1xyXG4gIH1cclxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCBjYXJkTGlrZSA9IHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fYnV0dG9uLWxpa2VcIik7XHJcbiAgICBjb25zdCBkZWxldGVCdXR0b24gPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFxyXG4gICAgICBcIi5jYXJkX19idXR0b24tZGVsZXRlXCJcclxuICAgICk7XHJcbiAgICBjb25zdCBjYXJkSW1hZ2UgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xyXG4gICAgY2FyZExpa2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5fdG9nZ2xlTGlrZSgpO1xyXG4gICAgICB0aGlzLl9zZW5kTGlrZSh0aGlzKTtcclxuICAgIH0pO1xyXG4gICAgZGVsZXRlQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZSh0aGlzKTtcclxuICAgICAgcmV0dXJuIHRoaXMuX2NhcmRFbGVtZW50O1xyXG4gICAgfSk7XHJcbiAgICBjYXJkSW1hZ2UuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcclxuICAgICAgdGhpcy5fdmlld0ltYWdlKHRoaXMpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjcmVhdGVDYXJkKCkge1xyXG4gICAgdGhpcy5fdGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRoaXMuX3RlbXBsYXRlKS5jb250ZW50O1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSB0aGlzLl90ZW1wbGF0ZS5xdWVyeVNlbGVjdG9yKFwiLmNhcmRcIikuY2xvbmVOb2RlKHRydWUpO1xyXG4gICAgY29uc3QgY2FyZE5hbWUgPSB0aGlzLl9jYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xyXG4gICAgY29uc3QgY2FyZEltYWdlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19pbWFnZVwiKTtcclxuICAgIGNvbnN0IGNhcmRDYXAgPSB0aGlzLm5hbWU7XHJcbiAgICBjb25zdCBjYXJkSW1nID0gdGhpcy5saW5rO1xyXG4gICAgY29uc3QgY2FyZElEID0gdGhpcy5faWQ7XHJcbiAgICBjYXJkTmFtZS50ZXh0Q29udGVudCA9IGNhcmRDYXA7XHJcbiAgICBjYXJkSW1hZ2Uuc3JjID0gY2FyZEltZztcclxuICAgIGNhcmRJbWFnZS5hbHQgPSBjYXJkQ2FwO1xyXG4gICAgdGhpcy5fY2FyZEVsZW1lbnQuaWQgPSBjYXJkSUQ7XHJcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5pc0xpa2VkID0gdGhpcy5pc0xpa2VkO1xyXG4gICAgaWYgKHRoaXMuX2NhcmRFbGVtZW50LmlzTGlrZWQpIHtcclxuICAgICAgdGhpcy5fY2FyZEVsZW1lbnRcclxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIi5jYXJkX19idXR0b24tbGlrZVwiKVxyXG4gICAgICAgIC5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fYnV0dG9uX2NsaWNrZWRcIik7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9jYXJkRWxlbWVudFxyXG4gICAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2J1dHRvbi1saWtlXCIpXHJcbiAgICAgICAgLmNsYXNzTGlzdC5yZW1vdmUoXCJjYXJkX19idXR0b25fY2xpY2tlZFwiKTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHsgcG9wdXAgfSkge1xyXG4gICAgdGhpcy5fcG9wdXAgPSBwb3B1cDtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVFc2NDbG9zZSA9IChldnQpID0+IHtcclxuICAgIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH1cclxuICB9O1xyXG5cclxuICBvcGVuKCkge1xyXG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UpO1xyXG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZChcIm1vZGFsLWJveF9vcGVuZWRcIik7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbC1ib3hfb3BlbmVkXCIpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCBidXR0b24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWJveF9fY2xvc2UtYnV0dG9uXCIpO1xyXG4gICAgYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgIH0pO1xyXG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldnQpID0+IHtcclxuICAgICAgaWYgKGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKFwibW9kYWwtYm94X29wZW5lZFwiKSkge1xyXG4gICAgICAgIHRoaXMuY2xvc2UoKTtcclxuICAgICAgfVxyXG4gICAgfSk7XHJcbiAgfVxyXG59XHJcbiIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwLCBmb3JtU3VibWl0KSB7XHJcbiAgICBzdXBlcih7IHBvcHVwIH0pO1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5mb3JtXCIpO1xyXG4gICAgdGhpcy5fZm9ybVN1Ym1pdCA9IGZvcm1TdWJtaXQ7XHJcbiAgfVxyXG5cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICBjb25zdCBpbnB1dHMgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKFwiLmZvcm1fX2lucHV0XCIpO1xyXG4gICAgY29uc3QgaW5wdXRzT2JqZWN0ID0ge307XHJcblxyXG4gICAgaW5wdXRzLmZvckVhY2goKHsgbmFtZSwgdmFsdWUgfSkgPT4ge1xyXG4gICAgICBpbnB1dHNPYmplY3RbbmFtZV0gPSB2YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIGlucHV0c09iamVjdDtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgdGhpcy5fcG9wdXBGb3JtLnJlc2V0KCk7XHJcbiAgICBzdXBlci5jbG9zZSgpO1xyXG4gIH1cclxuXHJcbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XHJcbiAgICBjb25zdCBzdWJtaXRCdXR0b24gPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvcihcIi5mb3JtX19idXR0b25cIik7XHJcbiAgICB0aGlzLl9wb3B1cEZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZXZ0KSA9PiB7XHJcbiAgICAgIGV2dC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICBzdWJtaXRCdXR0b24udGV4dENvbnRlbnQgPSBcIlNhdmluZy4uLlwiO1xyXG4gICAgICB0aGlzLl9mb3JtU3VibWl0KHRoaXMuX2dldElucHV0VmFsdWVzKCkpO1xyXG5cclxuICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgfSk7XHJcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xyXG4gIH1cclxufVxyXG5cclxuLypcclxuICBuYW1lOiBcIllvc2VtaXRlIFZhbGxleVwiLFxyXG4gIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC95b3NlbWl0ZS5qcGdcIixcclxuICB9LFxyXG5kYXRheyBcclxuXCJZb3NlbWl0ZSBWYWxsZXlcIjogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L3lvc2VtaXRlLmpwZ1wiXHJcbn0qL1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBGb3JtVmFsaWRhdG9yIHtcclxuICBjb25zdHJ1Y3Rvcihjb25maWcsIGZvcm0pIHtcclxuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcclxuICAgIHRoaXMuX2Zvcm0gPSBmb3JtO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVFcnJvcihpbnB1dCkge1xyXG4gICAgY29uc3QgZXJyb3JUZXh0ID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dC5pZH0tZXJyb3JgKTtcclxuICAgIGVycm9yVGV4dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5lcnJvcik7XHJcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbnB1dEVycm9yKTtcclxuICAgIGVycm9yVGV4dC50ZXh0Q29udGVudCA9IFwiXCI7XHJcbiAgfVxyXG5cclxuICBfc2hvd0Vycm9yKGlucHV0KSB7XHJcbiAgICBjb25zdCBlcnJvclRleHQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgZXJyb3JUZXh0LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmVycm9yKTtcclxuICAgIGlucHV0LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmlucHV0RXJyb3IpO1xyXG4gICAgZXJyb3JUZXh0LnRleHRDb250ZW50ID0gaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2U7XHJcbiAgfVxyXG4gIF90b2dnbGVJbnB1dEVycm9ycyhpbnB1dCkge1xyXG4gICAgaWYgKGlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XHJcbiAgICAgIHRoaXMuX2hpZGVFcnJvcihpbnB1dCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLl9zaG93RXJyb3IoaW5wdXQpO1xyXG4gICAgfVxyXG4gIH1cclxuICBfZGlzYWJsZVN1Ym1pdCgpIHtcclxuICAgIGNvbnN0IGJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9jb25maWcuc3VibWl0QnV0dG9uKTtcclxuICAgIGJ1dHRvbi5zZXRBdHRyaWJ1dGUoXCJkaXNhYmxlZFwiLCB0cnVlKTtcclxuICAgIGJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2NvbmZpZy5pbmFjdGl2ZUJ1dHRvbik7XHJcbiAgfVxyXG5cclxuICBfZW5hYmxlU3VibWl0KCkge1xyXG4gICAgY29uc3QgYnV0dG9uID0gdGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZy5zdWJtaXRCdXR0b24pO1xyXG4gICAgYnV0dG9uLnJlbW92ZUF0dHJpYnV0ZShcImRpc2FibGVkXCIpO1xyXG4gICAgYnV0dG9uLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uKTtcclxuICB9XHJcblxyXG4gIF9jaGVja0ZvckludmFsaWRJbnB1dCgpIHtcclxuICAgIGNvbnN0IGlucHV0TGlzdCA9IFsuLi50aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwodGhpcy5fY29uZmlnLmlucHV0KV07XHJcbiAgICByZXR1cm4gaW5wdXRMaXN0LnNvbWUoKGlucHV0KSA9PiB7XHJcbiAgICAgIHJldHVybiAhaW5wdXQudmFsaWRpdHkudmFsaWQ7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHRvZ2dsZVN1Ym1pdEJ1dHRvbigpIHtcclxuICAgIGlmICh0aGlzLl9jaGVja0ZvckludmFsaWRJbnB1dCgpKSB7XHJcbiAgICAgIHRoaXMuX2Rpc2FibGVTdWJtaXQoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMuX2VuYWJsZVN1Ym1pdCgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgY29uc3QgaW5wdXRzID0gWy4uLnRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9jb25maWcuaW5wdXQpXTtcclxuICAgIGlucHV0cy5mb3JFYWNoKChpbnB1dCkgPT4ge1xyXG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX3RvZ2dsZUlucHV0RXJyb3JzKGlucHV0KTtcclxuICAgICAgICB0aGlzLnRvZ2dsZVN1Ym1pdEJ1dHRvbigpO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZW5hYmxlVmFsaWRhdGlvbigpIHtcclxuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH0pO1xyXG4gIH1cclxufVxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7IGl0ZW1zLCByZW5kZXJlciB9LCBjYXJkQmluKSB7XHJcbiAgICB0aGlzLl9yZW5kZXJlZEl0ZW1zID0gaXRlbXM7XHJcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xyXG4gICAgdGhpcy5jYXJkQmluID0gY2FyZEJpbjtcclxuICB9XHJcblxyXG4gIHJlbmRlckl0ZW1zKCkge1xyXG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtcy5yZXZlcnNlKCkuZm9yRWFjaCgoaXRlbSkgPT4ge1xyXG4gICAgICB0aGlzLl9yZW5kZXJlcihpdGVtKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLmNhcmRCaW4ucHJlcGVuZChlbGVtZW50KTtcclxuICB9XHJcbn1cclxuIiwiY29uc3QgY2FyZExpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xyXG5jb25zdCBwcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtcHJvZmlsZVwiKTtcclxuY29uc3QgY2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZFwiKTtcclxuY29uc3QgcHJvTW9kYWxDbG9zZSA9IHByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWJveF9fY2xvc2UtYnV0dG9uXCIpO1xyXG5jb25zdCBjYXJkTW9kYWxDbG9zZSA9IGNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWJveF9fY2xvc2UtYnV0dG9uXCIpO1xyXG5cclxuY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xyXG5jb25zdCBwcm9maWxlRGVzYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fc3VidGl0bGVcIik7XHJcbmNvbnN0IG5hbWVJbnB1dCA9IHByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX2lucHV0X3R5cGVfbmFtZVwiKTtcclxuY29uc3QgZGVzY0lucHV0ID0gcHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIuZm9ybV9faW5wdXRfdHlwZV9kZXNjcmlwdGlvblwiKTtcclxuY29uc3QgY2FyZE1vZGFsRm9ybSA9IGNhcmRNb2RhbENsb3NlLmNsb3Nlc3QoXCIuZm9ybVwiKTtcclxuXHJcbmV4cG9ydCBmdW5jdGlvbiBvcGVuTW9kYWwobW9kYWwpIHtcclxuICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5ZG93blwiLCBjbG9zZVdpdGhFc2NhcGUpO1xyXG4gIG1vZGFsLmNsYXNzTGlzdC5hZGQoXCJtb2RhbC1ib3hfb3BlbmVkXCIpO1xyXG59XHJcbmV4cG9ydCBmdW5jdGlvbiBjbG9zZU1vZGFsKG1vZGFsKSB7XHJcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgY2xvc2VXaXRoRXNjYXBlKTtcclxuICBtb2RhbC5jbGFzc0xpc3QucmVtb3ZlKFwibW9kYWwtYm94X29wZW5lZFwiKTtcclxufVxyXG5leHBvcnQgZnVuY3Rpb24gY2xvc2VXaXRoRXNjYXBlKGV2dCkge1xyXG4gIGlmIChldnQua2V5ID09PSBcIkVzY2FwZVwiKSB7XHJcbiAgICBjb25zdCBhY3RpdmVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWwtYm94X29wZW5lZFwiKTtcclxuICAgIGNsb3NlTW9kYWwoYWN0aXZlTW9kYWwpO1xyXG4gIH1cclxufVxyXG5leHBvcnQgZnVuY3Rpb24gY2xvc2VPbk91dHNpZGVDbGljayhtb2RhbCkge1xyXG4gIGlmIChtb2RhbC5jbGFzc0xpc3QuY29udGFpbnMoXCJtb2RhbC1ib3hfb3BlbmVkXCIpKSB7XHJcbiAgICBjbG9zZU1vZGFsKG1vZGFsKTtcclxuICB9XHJcbn1cclxuIiwiZXhwb3J0IGNvbnN0IHByb2ZpbGVNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZWRpdC1wcm9maWxlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3RpdGxlXCIpO1xyXG5leHBvcnQgY29uc3QgcHJvZmlsZURlc2MgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX3N1YnRpdGxlXCIpO1xyXG5leHBvcnQgY29uc3QgY2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGQtY2FyZFwiKTtcclxuZXhwb3J0IGNvbnN0IGNhcmRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkc19fbGlzdFwiKTtcclxuZXhwb3J0IGNvbnN0IGVkaXRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2J1dHRvbnMtZWRpdFwiKTtcclxuZXhwb3J0IGNvbnN0IGFkZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYnV0dG9ucy1hZGRcIik7XHJcbmV4cG9ydCBjb25zdCBwb3B1cFdpdGhJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGlzcGxheS1pbWFnZVwiKTtcclxuZXhwb3J0IGNvbnN0IHBvcHVwSW1hZ2UgPSBwb3B1cFdpdGhJbWFnZS5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWJveF9faW1hZ2VcIik7XHJcbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1fX2lucHV0X3R5cGVfbmFtZVwiKTtcclxuZXhwb3J0IGNvbnN0IGRlc2NJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXHJcbiAgXCIuZm9ybV9faW5wdXRfdHlwZV9kZXNjcmlwdGlvblwiXHJcbik7XHJcbmV4cG9ydCBjb25zdCBhdmF0YXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2ltYWdlXCIpO1xyXG5leHBvcnQgY29uc3QgY2hhbmdlQXZhdGFyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNjaGFuZ2UtYXZhdGFyXCIpO1xyXG5leHBvcnQgY29uc3QgY2hhbmdlQXZhdGFyQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcclxuICBcIi5wcm9maWxlX19idXR0b25zLWltYWdlLWVkaXRcIlxyXG4pO1xyXG5leHBvcnQgY29uc3QgZGVsZXRlUG9wdXAgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1tb2RhbFwiKTtcclxuZXhwb3J0IGNvbnN0IGRlbGV0ZU5hbWUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1uYW1lXCIpO1xyXG5leHBvcnQgY29uc3QgZGVsZXRlTGluayA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLWxpbmtcIik7XHJcbmV4cG9ydCBjb25zdCBkZWxldGVJRCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjZGVsZXRlLWlkXCIpO1xyXG5leHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW1xyXG4gIHtcclxuICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QveW9zZW1pdGUuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxha2UgTG91aXNlXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvbGFrZS1sb3Vpc2UuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkJhbGQgTW91bnRhaW5zXCIsXHJcbiAgICBsaW5rOiBcImh0dHBzOi8vcHJhY3RpY3VtLWNvbnRlbnQuczMudXMtd2VzdC0xLmFtYXpvbmF3cy5jb20vc29mdHdhcmUtZW5naW5lZXIvYXJvdW5kLXByb2plY3QvYmFsZC1tb3VudGFpbnMuanBnXCIsXHJcbiAgfSxcclxuICB7XHJcbiAgICBuYW1lOiBcIkxhdGVtYXJcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC9sYXRlbWFyLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJWYW5vaXNlIE5hdGlvbmFsIFBhcmtcIixcclxuICAgIGxpbms6IFwiaHR0cHM6Ly9wcmFjdGljdW0tY29udGVudC5zMy51cy13ZXN0LTEuYW1hem9uYXdzLmNvbS9zb2Z0d2FyZS1lbmdpbmVlci9hcm91bmQtcHJvamVjdC92YW5vaXNlLmpwZ1wiLFxyXG4gIH0sXHJcbiAge1xyXG4gICAgbmFtZTogXCJMYWdvIGRpIEJyYWllc1wiLFxyXG4gICAgbGluazogXCJodHRwczovL3ByYWN0aWN1bS1jb250ZW50LnMzLnVzLXdlc3QtMS5hbWF6b25hd3MuY29tL3NvZnR3YXJlLWVuZ2luZWVyL2Fyb3VuZC1wcm9qZWN0L2xhZ28uanBnXCIsXHJcbiAgfSxcclxuXTtcclxuXHJcbmV4cG9ydCBjb25zdCBjb25maWcgPSB7XHJcbiAgLy8gSURzXHJcbiAgZWRpdE1vZGFsOiBcIiNlZGl0LXByb2ZpbGVcIixcclxuICBhZGRNb2RhbDogXCIjYWRkLWNhcmRcIixcclxuICBjaGFuZ2VBdmF0YXI6IFwiI2NoYW5nZS1hdmF0YXJcIixcclxuICAvLyBTZWxlY3RvcnNcclxuICBuYW1lOiBcIi5wcm9maWxlX190aXRsZVwiLFxyXG4gIGRlc2NyaXB0aW9uOiBcIi5wcm9maWxlX19zdWJ0aXRsZVwiLFxyXG4gIGZvcm06IFwiLmZvcm1cIixcclxuICBpbnB1dDogXCIuZm9ybV9faW5wdXRcIixcclxuICBzdWJtaXRCdXR0b246IFwiLmZvcm1fX2J1dHRvblwiLFxyXG4gIC8vIENsYXNzZXNcclxuICBpbmFjdGl2ZUJ1dHRvbjogXCJmb3JtX19idXR0b25fZGlzYWJsZWRcIixcclxuICBpbnB1dEVycm9yOiBcImZvcm1fX2lucHV0X2ludmFsaWRcIixcclxuICBlcnJvcjogXCJmb3JtX19lcnJvcl92aXNpYmxlXCIsXHJcbn07XHJcbiIsIi8vIGNvbnNvbGUubG9nKFwiZGVidWctYnJlYWtcIik7XHJcblxyXG5pbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xyXG5pbXBvcnQgQVBJIGZyb20gXCIuLi9jb21wb25lbnRzL0FwaS5qc1wiO1xyXG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9DYXJkLmpzXCI7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanNcIjtcclxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSBcIi4uL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qc1wiO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcclxuaW1wb3J0IFNlY3Rpb24gZnJvbSBcIi4uL2NvbXBvbmVudHMvU2VjdGlvbi5qc1wiO1xyXG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8uanNcIjtcclxuaW1wb3J0ICogYXMgdXRpbGl0aWVzIGZyb20gXCIuLi91dGlsaXR5L3V0aWxpdHkuanNcIjtcclxuaW1wb3J0ICogYXMgY29uc3RhbnRzIGZyb20gXCIuLi91dGlsaXR5L2NvbnN0YW50cy5qc1wiO1xyXG5jb25zdCBhcGkgPSBuZXcgQVBJKGNvbnN0YW50cy5jb25maWcpO1xyXG5sZXQgY2FyZFJlbmRlcmVyO1xyXG5hcGkuZ2V0VXNlckluZm8oKS50aGVuKChyZXN1bHQpID0+IHtcclxuICB1c2VySW5mby5zZXRVc2VySW5mbyhyZXN1bHQpO1xyXG4gIGNvbnN0YW50cy5hdmF0YXIuc3JjID0gcmVzdWx0LmF2YXRhcjtcclxufSk7XHJcbmFwaS5nZXRJbml0aWFsQ2FyZHMoKS50aGVuKChyZXN1bHQpID0+IHtcclxuICBjb25zdCByZW5kZXJDYXJkID0gKGNhcmQpID0+IHtcclxuICAgIGNhcmRSZW5kZXJlci5hZGRJdGVtKGNyZWF0ZUNhcmQoY2FyZCkpO1xyXG4gIH07XHJcbiAgY2FyZFJlbmRlcmVyID0gbmV3IFNlY3Rpb24oXHJcbiAgICB7IGl0ZW1zOiByZXN1bHQsIHJlbmRlcmVyOiByZW5kZXJDYXJkIH0sXHJcbiAgICBjb25zdGFudHMuY2FyZExpc3RcclxuICApO1xyXG4gIGNhcmRSZW5kZXJlci5yZW5kZXJJdGVtcygpO1xyXG59KTtcclxuXHJcbmNvbnN0IHBvcHVwSW1hZ2UgPSBuZXcgUG9wdXBXaXRoSW1hZ2UoXHJcbiAgY29uc3RhbnRzLnBvcHVwV2l0aEltYWdlLFxyXG4gIGNvbnN0YW50cy5wb3B1cEltYWdlXHJcbik7XHJcbnBvcHVwSW1hZ2Uuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuY29uc3Qgb3BlblBvcHVwSW1hZ2UgPSAoZGF0YSkgPT4ge1xyXG4gIHBvcHVwSW1hZ2Uub3BlbihkYXRhKTtcclxufTtcclxuY29uc3QgZGVsZXRlUG9wdXAgPSBuZXcgUG9wdXBXaXRoRm9ybShjb25zdGFudHMuZGVsZXRlUG9wdXAsIChkYXRhKSA9PiB7XHJcbiAgYXBpLmRlbGV0ZUNhcmQoZGF0YS5faWQsIGRhdGEpO1xyXG59KTtcclxuZGVsZXRlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbmNvbnN0IG9wZW5EZWxldGVQb3B1cCA9IChkYXRhKSA9PiB7XHJcbiAgZGVsZXRlUG9wdXAub3BlbigpO1xyXG4gIGNvbnN0YW50cy5kZWxldGVJRC52YWx1ZSA9IGRhdGEuX2lkO1xyXG59O1xyXG5cclxuZnVuY3Rpb24gc2VuZExpa2UoZGF0YSkge1xyXG4gIC8vIEkgcHV0IHRoZSBhbGVydHMgaW4gYXMgYSBsaXR0bGUgZXh0cmEuIEknbSBhd2FyZSB0aGV5IGRvbid0IHdvcmsgcHJvcGVybHksIGJ1dCB0aGV5J3JlIG5vdCBwYXJ0IG9mIHRoZSBwcm9qZWN0LCBzbyBJIGp1c3QgY29tbWVudGVkIHRoZW0gb3V0LlxyXG4gIGlmIChkYXRhLmlzTGlrZWQpIHtcclxuICAgIC8vIGFsZXJ0KGBZb3UgcmVtb3ZlZCB5b3VyIGxpa2UgZm9yICR7ZGF0YS5uYW1lfWApO1xyXG4gICAgYXBpLnJlbW92ZUxpa2UoZGF0YS5faWQsIGRhdGEpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICAvLyBhbGVydChgWW91IGxpa2VkICR7ZGF0YS5uYW1lfWApO1xyXG4gICAgYXBpLmxpa2VDYXJkKGRhdGEuX2lkLCBkYXRhKTtcclxuICB9XHJcbn1cclxuXHJcbmNvbnN0IHVzZXJJbmZvID0gbmV3IFVzZXJJbmZvKHtcclxuICBuYW1lOiBjb25zdGFudHMucHJvZmlsZU5hbWUsXHJcbiAgYWJvdXQ6IGNvbnN0YW50cy5wcm9maWxlRGVzYyxcclxufSk7XHJcbmNvbnN0IGNhcmRNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKGNvbnN0YW50cy5jYXJkTW9kYWwsIChkYXRhKSA9PiB7XHJcbiAgYXBpLnNlbmRDYXJkKGRhdGEpO1xyXG59KTtcclxuY2FyZE1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG5jb25zdCBhdmF0YXJNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKGNvbnN0YW50cy5jaGFuZ2VBdmF0YXIsIChkYXRhKSA9PiB7XHJcbiAgYXBpLnVwZGF0ZVByb2ZpbGVQaWN0dXJlKGRhdGEpO1xyXG59KTtcclxuYXZhdGFyTW9kYWwuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vIENhcmQgQ29kZVxyXG5cclxuZnVuY3Rpb24gY3JlYXRlQ2FyZChjYXJkKSB7XHJcbiAgY29uc3QgaW5pdENhcmQgPSBuZXcgQ2FyZChcclxuICAgIGNhcmQsXHJcbiAgICBcIiNjYXJkXCIsXHJcbiAgICBvcGVuUG9wdXBJbWFnZSxcclxuICAgIG9wZW5EZWxldGVQb3B1cCxcclxuICAgIHNlbmRMaWtlXHJcbiAgKTtcclxuICByZXR1cm4gaW5pdENhcmQuY3JlYXRlQ2FyZCgpO1xyXG59XHJcbi8vIGNvbnN0IGRlbGV0ZUNhcmQgPSBhcGkuZGVsZXRlQ2FyZCgpO1xyXG4vL01vZGFsIEJveCBDb2RlXHJcbmNvbnN0IHByb2ZpbGVNb2RhbCA9IG5ldyBQb3B1cFdpdGhGb3JtKGNvbnN0YW50cy5wcm9maWxlTW9kYWwsIChkYXRhKSA9PiB7XHJcbiAgYXBpLnVwZGF0ZVVzZXJJbmZvKGRhdGEpO1xyXG59KTtcclxucHJvZmlsZU1vZGFsLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbmNvbnN0YW50cy5lZGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoKSB7XHJcbiAgcHJvZmlsZU1vZGFsLm9wZW4oKTtcclxuICBjb25zdCBwcm9maWxlSW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XHJcbiAgY29uc3RhbnRzLm5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVJbmZvLm5hbWU7XHJcbiAgY29uc3RhbnRzLmRlc2NJbnB1dC52YWx1ZSA9IHByb2ZpbGVJbmZvLmFib3V0O1xyXG4gIHZhbGlkYXRlRWRpdE1vZGFsLnRvZ2dsZVN1Ym1pdEJ1dHRvbigpO1xyXG59KTtcclxuXHJcbmNvbnN0IHZhbGlkYXRlQXZhdGFyTW9kYWwgPSBuZXcgRm9ybVZhbGlkYXRvcihcclxuICBjb25zdGFudHMuY29uZmlnLFxyXG4gIGNvbnN0YW50cy5jaGFuZ2VBdmF0YXJcclxuKTtcclxudmFsaWRhdGVBdmF0YXJNb2RhbC5lbmFibGVWYWxpZGF0aW9uKCk7XHJcblxyXG5jb25zdGFudHMuY2hhbmdlQXZhdGFyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbiAgYXZhdGFyTW9kYWwub3BlbigpO1xyXG4gIHZhbGlkYXRlQXZhdGFyTW9kYWwudG9nZ2xlU3VibWl0QnV0dG9uKCk7XHJcbn0pO1xyXG5cclxuY29uc3RhbnRzLmFkZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKCkge1xyXG4gIGNhcmRNb2RhbC5vcGVuKCk7XHJcbiAgdmFsaWRhdGVBZGRNb2RhbC50b2dnbGVTdWJtaXRCdXR0b24oKTtcclxufSk7XHJcbmNvbnN0IHZhbGlkYXRlRWRpdE1vZGFsID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgY29uc3RhbnRzLmNvbmZpZyxcclxuICBjb25zdGFudHMucHJvZmlsZU1vZGFsXHJcbik7XHJcbnZhbGlkYXRlRWRpdE1vZGFsLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuXHJcbmV4cG9ydCBjb25zdCB2YWxpZGF0ZUFkZE1vZGFsID0gbmV3IEZvcm1WYWxpZGF0b3IoXHJcbiAgY29uc3RhbnRzLmNvbmZpZyxcclxuICBjb25zdGFudHMuY2FyZE1vZGFsXHJcbik7XHJcbnZhbGlkYXRlQWRkTW9kYWwuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG4iLCIvLyBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL1wiXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBBUEkge1xyXG4gIGNvbnN0cnVjdG9yKG9wdGlvbnMpIHtcclxuICAgIHRoaXMuX29wdGlvbnMgPSBvcHRpb25zO1xyXG4gIH1cclxuXHJcbiAgZ2V0SW5pdGlhbENhcmRzKCkge1xyXG4gICAgcmV0dXJuIGZldGNoKFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHNcIiwge1xyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogXCJlYjE0NDQwNy05ZDU2LTRjMzktOGVhYy03ZmEzMjQ1MmE2N2ZcIixcclxuICAgICAgfSxcclxuICAgIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKCk7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGBFcnJvcjogJHtyZXMuc3RhdHVzfWApO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHJldHVybiBmZXRjaChcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL3VzZXJzL21lXCIsIHtcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IFwiZWIxNDQ0MDctOWQ1Ni00YzM5LThlYWMtN2ZhMzI0NTJhNjdmXCIsXHJcbiAgICAgIH0sXHJcbiAgICB9KS50aGVuKChyZXMpID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpO1xyXG4gICAgICB9XHJcbiAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgc3VibWl0VXNlckluZm8oZGF0YSkge1xyXG4gICAgZmV0Y2goXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS91c2Vycy9tZVwiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiBcImViMTQ0NDA3LTlkNTYtNGMzOS04ZWFjLTdmYTMyNDUyYTY3ZlwiLFxyXG4gICAgICB9LFxyXG4gICAgfSkudGhlbihKU09OLnN0cmluZ2lmeShkYXRhKSk7XHJcbiAgfVxyXG5cclxuICB1cGRhdGVVc2VySW5mbyhkYXRhKSB7XHJcbiAgICBmZXRjaChcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL3VzZXJzL21lXCIsIHtcclxuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL0pTT05cIixcclxuICAgICAgICBhdXRob3JpemF0aW9uOiBcImViMTQ0NDA3LTlkNTYtNGMzOS04ZWFjLTdmYTMyNDUyYTY3ZlwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlUHJvZmlsZVBpY3R1cmUoZGF0YSkge1xyXG4gICAgZmV0Y2goXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS91c2Vycy9tZS9hdmF0YXJcIiwge1xyXG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IFwiZWIxNDQ0MDctOWQ1Ni00YzM5LThlYWMtN2ZhMzI0NTJhNjdmXCIsXHJcbiAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9KU09OXCIsXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpLFxyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBzZW5kQ2FyZChkYXRhKSB7XHJcbiAgICByZXR1cm4gZmV0Y2goXCJodHRwczovL2Fyb3VuZC1hcGkuZW4udHJpcGxldGVuLXNlcnZpY2VzLmNvbS92MS9jYXJkc1wiLCB7XHJcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL0pTT05cIixcclxuICAgICAgICBhdXRob3JpemF0aW9uOiBcImViMTQ0NDA3LTlkNTYtNGMzOS04ZWFjLTdmYTMyNDUyYTY3ZlwiLFxyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKSxcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGVsZXRlQ2FyZChjYXJkSUQsIGNhcmQpIHtcclxuICAgIHJldHVybiBmZXRjaChcclxuICAgICAgYGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL2NhcmRzLyR7Y2FyZElEfWAsXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgYXV0aG9yaXphdGlvbjogXCJlYjE0NDQwNy05ZDU2LTRjMzktOGVhYy03ZmEzMjQ1MmE2N2ZcIixcclxuICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vSlNPTlwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoY2FyZCksXHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICBsaWtlQ2FyZChjYXJkSUQsIGNhcmQpIHtcclxuICAgIHJldHVybiBmZXRjaChcclxuICAgICAgYGh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxL2NhcmRzLyR7Y2FyZElEfS9saWtlc2AsXHJcbiAgICAgIHtcclxuICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXHJcbiAgICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgICAgYXV0aG9yaXphdGlvbjogXCJlYjE0NDQwNy05ZDU2LTRjMzktOGVhYy03ZmEzMjQ1MmE2N2ZcIixcclxuICAgICAgICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vSlNPTlwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoY2FyZCksXHJcbiAgICAgIH1cclxuICAgICk7XHJcbiAgfVxyXG5cclxuICByZW1vdmVMaWtlKGNhcmRJRCwgY2FyZCkge1xyXG4gICAgcmV0dXJuIGZldGNoKFxyXG4gICAgICBgaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjEvY2FyZHMvJHtjYXJkSUR9L2xpa2VzYCxcclxuICAgICAge1xyXG4gICAgICAgIG1ldGhvZDogXCJERUxFVEVcIixcclxuICAgICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgICBhdXRob3JpemF0aW9uOiBcImViMTQ0NDA3LTlkNTYtNGMzOS04ZWFjLTdmYTMyNDUyYTY3ZlwiLFxyXG4gICAgICAgICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9KU09OXCIsXHJcbiAgICAgICAgfSxcclxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShjYXJkKSxcclxuICAgICAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEltYWdlIGV4dGVuZHMgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwLCBpbWFnZSkge1xyXG4gICAgc3VwZXIoeyBwb3B1cCB9KTtcclxuICAgIHRoaXMuX2ltYWdlID0gaW1hZ2U7XHJcbiAgfVxyXG5cclxuICBvcGVuKGRhdGEpIHtcclxuICAgIGNvbnN0IG1vZGFsSW1hZ2UgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWJveF9faW1hZ2VcIik7XHJcbiAgICBjb25zdCBtb2RhbEltYWdlVGl0bGUgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsLWJveF9fY2FwdGlvblwiKTtcclxuICAgIGNvbnN0IGNhcmRDYXAgPSBkYXRhLm5hbWU7XHJcbiAgICBjb25zdCBjYXJkSW1nID0gZGF0YS5saW5rO1xyXG4gICAgbW9kYWxJbWFnZVRpdGxlLnRleHRDb250ZW50ID0gY2FyZENhcDtcclxuICAgIG1vZGFsSW1hZ2Uuc3JjID0gY2FyZEltZztcclxuICAgIG1vZGFsSW1hZ2UuYWx0ID0gYFByZXZpZXcgaW1hZ2UgZm9yICR7Y2FyZENhcH1gO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gICAgcmV0dXJuIGRhdGE7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICBjb25zdHJ1Y3Rvcih7IG5hbWUsIGFib3V0IH0pIHtcclxuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xyXG4gICAgdGhpcy5fYWJvdXQgPSBhYm91dDtcclxuICB9XHJcblxyXG4gIGdldFVzZXJJbmZvKCkge1xyXG4gICAgY29uc3QgdXNlckRhdGEgPSB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX25hbWUudGV4dENvbnRlbnQsXHJcbiAgICAgIGFib3V0OiB0aGlzLl9hYm91dC50ZXh0Q29udGVudCxcclxuICAgIH07XHJcbiAgICByZXR1cm4gdXNlckRhdGE7XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyhkYXRhKSB7XHJcbiAgICB0aGlzLl9uYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lOyAvKiAoZm9ybWVybHkgbmFtZUlucHV0LnZhbHVlKSAqL1xyXG4gICAgdGhpcy5fYWJvdXQudGV4dENvbnRlbnQgPSBkYXRhLmFib3V0OyAvKiAoZm9ybWVybHkgZGVzY0lucHV0LnZhbHVlKSAqL1xyXG4gIH1cclxufVxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImNvbnN0cnVjdG9yIiwiX3JlZiIsInRlbXBsYXRlIiwidmlld0ltYWdlIiwiaGFuZGxlRGVsZXRlIiwic2VuZExpa2UiLCJuYW1lIiwibGluayIsIl9pZCIsImlzTGlrZWQiLCJ0aGlzIiwiX3RlbXBsYXRlIiwiX3ZpZXdJbWFnZSIsIl9oYW5kbGVEZWxldGUiLCJfc2VuZExpa2UiLCJfdG9nZ2xlTGlrZSIsIl9jYXJkRWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJfcmVtb3ZlQ2FyZCIsInJlbW92ZSIsIl9zZXRFdmVudExpc3RlbmVycyIsImNhcmRMaWtlIiwiZGVsZXRlQnV0dG9uIiwiY2FyZEltYWdlIiwiYWRkRXZlbnRMaXN0ZW5lciIsImNyZWF0ZUNhcmQiLCJkb2N1bWVudCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJjYXJkTmFtZSIsImNhcmRDYXAiLCJjYXJkSW1nIiwiY2FyZElEIiwidGV4dENvbnRlbnQiLCJzcmMiLCJhbHQiLCJpZCIsImFkZCIsIlBvcHVwIiwicG9wdXAiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJldnQiLCJrZXkiLCJjbG9zZSIsIm9wZW4iLCJyZW1vdmVFdmVudExpc3RlbmVyIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEZvcm0iLCJmb3JtU3VibWl0Iiwic3VwZXIiLCJfcG9wdXBGb3JtIiwiX2Zvcm1TdWJtaXQiLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dHMiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXRzT2JqZWN0IiwiZm9yRWFjaCIsInZhbHVlIiwicmVzZXQiLCJzdWJtaXRCdXR0b24iLCJwcmV2ZW50RGVmYXVsdCIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtIiwiX2NvbmZpZyIsIl9mb3JtIiwiX2hpZGVFcnJvciIsImlucHV0IiwiZXJyb3JUZXh0IiwiZXJyb3IiLCJpbnB1dEVycm9yIiwiX3Nob3dFcnJvciIsInZhbGlkYXRpb25NZXNzYWdlIiwiX3RvZ2dsZUlucHV0RXJyb3JzIiwidmFsaWRpdHkiLCJ2YWxpZCIsIl9kaXNhYmxlU3VibWl0IiwiYnV0dG9uIiwic2V0QXR0cmlidXRlIiwiaW5hY3RpdmVCdXR0b24iLCJfZW5hYmxlU3VibWl0IiwicmVtb3ZlQXR0cmlidXRlIiwiX2NoZWNrRm9ySW52YWxpZElucHV0Iiwic29tZSIsInRvZ2dsZVN1Ym1pdEJ1dHRvbiIsImVuYWJsZVZhbGlkYXRpb24iLCJTZWN0aW9uIiwiY2FyZEJpbiIsIml0ZW1zIiwicmVuZGVyZXIiLCJfcmVuZGVyZWRJdGVtcyIsIl9yZW5kZXJlciIsInJlbmRlckl0ZW1zIiwicmV2ZXJzZSIsIml0ZW0iLCJhZGRJdGVtIiwiZWxlbWVudCIsInByZXBlbmQiLCJwcm9maWxlTW9kYWwiLCJjYXJkTW9kYWwiLCJjYXJkTW9kYWxDbG9zZSIsImNsb3Nlc3QiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVEZXNjIiwiY2FyZExpc3QiLCJlZGl0QnV0dG9uIiwiYWRkQnV0dG9uIiwicG9wdXBXaXRoSW1hZ2UiLCJwb3B1cEltYWdlIiwibmFtZUlucHV0IiwiZGVzY0lucHV0IiwiYXZhdGFyIiwiY2hhbmdlQXZhdGFyIiwiY2hhbmdlQXZhdGFyQnV0dG9uIiwiZGVsZXRlUG9wdXAiLCJkZWxldGVJRCIsImVkaXRNb2RhbCIsImFkZE1vZGFsIiwiZGVzY3JpcHRpb24iLCJhcGkiLCJvcHRpb25zIiwiX29wdGlvbnMiLCJnZXRJbml0aWFsQ2FyZHMiLCJmZXRjaCIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwidGhlbiIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJnZXRVc2VySW5mbyIsInN1Ym1pdFVzZXJJbmZvIiwiZGF0YSIsIm1ldGhvZCIsIkpTT04iLCJzdHJpbmdpZnkiLCJ1cGRhdGVVc2VySW5mbyIsImJvZHkiLCJ1cGRhdGVQcm9maWxlUGljdHVyZSIsInNlbmRDYXJkIiwiZGVsZXRlQ2FyZCIsImNhcmQiLCJsaWtlQ2FyZCIsInJlbW92ZUxpa2UiLCJjb25zdGFudHMiLCJjYXJkUmVuZGVyZXIiLCJyZXN1bHQiLCJ1c2VySW5mbyIsInNldFVzZXJJbmZvIiwib3BlblBvcHVwSW1hZ2UiLCJvcGVuRGVsZXRlUG9wdXAiLCJpbWFnZSIsIl9pbWFnZSIsIm1vZGFsSW1hZ2UiLCJtb2RhbEltYWdlVGl0bGUiLCJhYm91dCIsIl9uYW1lIiwiX2Fib3V0IiwiYXZhdGFyTW9kYWwiLCJwcm9maWxlSW5mbyIsInZhbGlkYXRlRWRpdE1vZGFsIiwidmFsaWRhdGVBdmF0YXJNb2RhbCIsInZhbGlkYXRlQWRkTW9kYWwiXSwic291cmNlUm9vdCI6IiJ9