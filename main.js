!function(){"use strict";class e{constructor(e,t,r,o,i){let{name:n,link:s,_id:a,isLiked:c}=e;this.name=n,this.link=s,this._id=a,this.isLiked=c,this._template=t,this._viewImage=r,this._handleDelete=o,this._sendLike=i}_toggleLike(){this._cardElement.querySelector(".card__button-like").classList.toggle("card__button_clicked")}_removeCard(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){const e=this._cardElement.querySelector(".card__button-like"),t=this._cardElement.querySelector(".card__button-delete"),r=this._cardElement.querySelector(".card__image");e.addEventListener("click",(()=>{this._toggleLike(),this._sendLike(this)})),t.addEventListener("click",(()=>(this._handleDelete(this),console.log(this._cardElement),this._cardElement))),r.addEventListener("click",(()=>{this._viewImage(this)}))}createCard(){this._template=document.querySelector(this._template).content,this._cardElement=this._template.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__title"),t=this._cardElement.querySelector(".card__image"),r=this.name,o=this.link,i=this._id;return e.textContent=r,t.src=o,t.alt=r,this._cardElement.id=i,this._cardElement.isLiked=this.isLiked,this._cardElement.isLiked?this._cardElement.querySelector(".card__button-like").classList.add("card__button_clicked"):this._cardElement.querySelector(".card__button-like").classList.remove("card__button_clicked"),this._setEventListeners(),this._cardElement}}class t{constructor(e){let{popup:t}=e;this._popup=t}_handleEscClose=e=>{"Escape"===e.key&&this.close()};open(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("modal-box_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("modal-box_opened")}setEventListeners(){this._popup.querySelector(".modal-box__close-button").addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("click",(e=>{e.target.classList.contains("modal-box_opened")&&this.close()}))}}class r extends t{constructor(e,t){super({popup:e}),this._popupForm=this._popup.querySelector(".form"),this._formSubmit=t}_getInputValues(){const e=this._popup.querySelectorAll(".form__input"),t={};return e.forEach((e=>{let{name:r,value:o}=e;t[r]=o})),t}close(){this._popupForm.reset(),super.close()}_reloadPage(){location.reload()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._formSubmit(this._getInputValues()),setTimeout(this._reloadPage,1e3),this.close()})),super.setEventListeners()}}class o{constructor(e,t){this._config=e,this._form=t}_hideError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.remove(this._config.error),e.classList.remove(this._config.inputError),t.textContent=""}_showError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.add(this._config.error),e.classList.add(this._config.inputError),t.textContent=e.validationMessage}_toggleInputErrors(e){e.validity.valid?this._hideError(e):this._showError(e)}_disableSubmit(){const e=this._form.querySelector(this._config.submitButton);e.setAttribute("disabled",!0),e.classList.add(this._config.inactiveButton)}_enableSubmit(){const e=this._form.querySelector(this._config.submitButton);e.removeAttribute("disabled"),e.classList.remove(this._config.inactiveButton)}_checkForInvalidInput(){return[...this._form.querySelectorAll(this._config.input)].some((e=>!e.validity.valid))}toggleSubmitButton(){this._checkForInvalidInput()?this._disableSubmit():this._enableSubmit()}_setEventListeners(){[...this._form.querySelectorAll(this._config.input)].forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputErrors(e),this.toggleSubmitButton()}))}))}enableValidation(){this._setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault()}))}}class i{constructor(e,t){let{items:r,renderer:o}=e;this._renderedItems=r,this._renderer=o,this.cardBin=t}renderItems(){this._renderedItems.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this.cardBin.prepend(e)}}document.querySelector(".cards__list");const n=document.querySelector("#edit-profile"),s=document.querySelector("#add-card"),a=(n.querySelector(".modal-box__close-button"),s.querySelector(".modal-box__close-button"));document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),n.querySelector(".form__input_type_name"),n.querySelector(".form__input_type_description"),a.closest(".form");const c=document.querySelector("#edit-profile"),d=document.querySelector(".profile__title"),l=document.querySelector(".profile__subtitle"),u=document.querySelector("#add-card"),_=document.querySelector(".cards__list"),m=document.querySelector(".profile__buttons-edit"),h=document.querySelector(".profile__buttons-add"),p=document.querySelector("#display-image"),f=p.querySelector(".modal-box__image"),b=document.querySelector(".form__input_type_name"),v=document.querySelector(".form__input_type_description"),y=document.querySelector(".profile__image"),S=document.querySelector("#change-avatar"),g=document.querySelector(".profile__buttons-image-edit"),E=document.querySelector("#delete-modal"),L=(document.querySelector("#delete-name"),document.querySelector("#delete-link"),document.querySelector("#delete-id")),q={editModal:"#edit-profile",addModal:"#add-card",changeAvatar:"#change-avatar",name:".profile__title",description:".profile__subtitle",form:".form",input:".form__input",submitButton:".form__button",inactiveButton:"form__button_disabled",inputError:"form__input_invalid",error:"form__error_visible"},k=new class{constructor(e){this._options=e}getInitialCards(){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}getUserInfo(){return fetch("https://around-api.en.tripleten-services.com/v1/users/me",{headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"}}).then((e=>e.ok?e.json():Promise.reject(`Error: ${e.status}`)))}submitUserInfo(e){fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"POST",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"}}).then(JSON.stringify(e))}updateUserInfo(e){fetch("https://around-api.en.tripleten-services.com/v1/users/me",{method:"PATCH",headers:{"content-type":"application/JSON",authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"},body:JSON.stringify(e)})}updateProfilePicture(e){fetch("https://around-api.en.tripleten-services.com/v1/users/me/avatar",{method:"PATCH",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(e)})}sendCard(e){return fetch("https://around-api.en.tripleten-services.com/v1/cards",{method:"POST",headers:{"content-type":"application/JSON",authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f"},body:JSON.stringify(e)})}deleteCard(e,t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}`,{method:"DELETE",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(t)})}likeCard(e,t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"PUT",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(t)})}removeLike(e,t){return fetch(`https://around-api.en.tripleten-services.com/v1/cards/${e}/likes`,{method:"DELETE",headers:{authorization:"eb144407-9d56-4c39-8eac-7fa32452a67f","content-type":"application/JSON"},body:JSON.stringify(t)})}}(q);let I;k.getUserInfo().then((e=>{P.setUserInfo(e),y.src=e.avatar})),k.getInitialCards().then((t=>{I=new i({items:t,renderer:t=>{I.addItem(function(t){return new e(t,"#card",w,O,N).createCard()}(t))}},_),I.renderItems(),console.log(t)}));const C=new class extends t{constructor(e,t){super({popup:e}),this._image=t}open(e){const t=this._popup.querySelector(".modal-box__image"),r=this._popup.querySelector(".modal-box__caption"),o=e.name,i=e.link;return r.textContent=o,t.src=i,t.alt=`Preview image for ${o}`,super.open(),e}}(p,f);C.setEventListeners();const w=e=>{C.open(e)},x=new r(E,(e=>{k.deleteCard(e._id,e)}));x.setEventListeners();const O=e=>{x.open(),console.log(e),L.value=e._id};function N(e){e.isLiked?(alert(`You removed your like for ${e.name}`),k.removeLike(e._id,e)):(alert(`You liked ${e.name}`),k.likeCard(e._id,e))}const P=new class{constructor(e){let{name:t,about:r}=e;this._name=t,this._about=r}getUserInfo(){return{name:this._name.textContent,about:this._about.textContent}}setUserInfo(e){this._name.textContent=e.name,this._about.textContent=e.about}}({name:d,about:l}),B=new r(u,(e=>{k.sendCard(e)}));B.setEventListeners();const J=new r(S,(e=>{console.log(e),k.updateProfilePicture(e)}));J.setEventListeners();const U=new r(c,(e=>{k.updateUserInfo(e)}));U.setEventListeners(),m.addEventListener("click",(function(){U.open();const e=P.getUserInfo();b.value=e.name,v.value=e.about,console.log(U),z.toggleSubmitButton()}));const $=new o(q,S);$.enableValidation(),g.addEventListener("click",(()=>{J.open(),$.toggleSubmitButton()})),h.addEventListener("click",(function(){B.open(),A.toggleSubmitButton()}));const z=new o(q,c);z.enableValidation();const A=new o(q,u);A.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,