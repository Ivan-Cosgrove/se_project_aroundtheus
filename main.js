!function(){"use strict";class e{constructor(e,t,r){let{name:o,link:n}=e;this.name=o,this.link=n,this._template=t,this._viewImage=r}_toggleLike(){this._cardElement.querySelector(".card__button-like").classList.toggle("card__button_clicked")}_removeCard(){this._cardElement.remove(),this._cardElement=null}_setEventListeners(){const e=this._cardElement.querySelector(".card__button-like"),t=this._cardElement.querySelector(".card__button-delete"),r=this._cardElement.querySelector(".card__image");e.addEventListener("click",(()=>{this._toggleLike()})),t.addEventListener("click",(()=>{this._removeCard()})),r.addEventListener("click",(()=>{this._viewImage(this)}))}createCard(){this._template=document.querySelector(this._template).content,this._cardElement=this._template.querySelector(".card").cloneNode(!0);const e=this._cardElement.querySelector(".card__title"),t=this._cardElement.querySelector(".card__image"),r=this.name,o=this.link;return e.textContent=r,t.src=o,t.alt=r,this._setEventListeners(),this._cardElement}}class t{constructor(e){let{popup:t}=e;this._popup=t}_handleEscClose=e=>{"Escape"===e.key&&this.close()};open(){document.addEventListener("keydown",this._handleEscClose),this._popup.classList.add("modal-box_opened")}close(){document.removeEventListener("keydown",this._handleEscClose),this._popup.classList.remove("modal-box_opened")}setEventListeners(){this._popup.querySelector(".modal-box__close-button").addEventListener("click",(()=>{this.close()})),this._popup.addEventListener("click",(e=>{e.target.classList.contains("modal-box_opened")&&this.close()}))}}class r extends t{constructor(e,t){super({popup:e}),this._popupForm=this._popup.querySelector(".form"),this._formSubmit=t}_getInputValues(){const e=this._popup.querySelectorAll(".form__input"),t={};return e.forEach((e=>{let{name:r,value:o}=e;t[r]=o})),t}close(){this._popupForm.reset(),super.close()}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._formSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}}class o{constructor(e,t){this._config=e,this._form=t}_hideError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.remove(this._config.error),e.classList.remove(this._config.inputError),t.textContent=""}_showError(e){const t=this._form.querySelector(`.${e.id}-error`);t.classList.add(this._config.error),e.classList.add(this._config.inputError),t.textContent=e.validationMessage}_toggleInputErrors(e){e.validity.valid?this._hideError(e):this._showError(e)}_disableSubmit(){const e=this._form.querySelector(this._config.submitButton);e.setAttribute("disabled",!0),e.classList.add(this._config.inactiveButton)}_enableSubmit(){const e=this._form.querySelector(this._config.submitButton);e.removeAttribute("disabled"),e.classList.remove(this._config.inactiveButton)}_checkForInvalidInput(){return[...this._form.querySelectorAll(this._config.input)].some((e=>!e.validity.valid))}toggleSubmitButton(){this._checkForInvalidInput()?this._disableSubmit():this._enableSubmit()}_setEventListeners(){[...this._form.querySelectorAll(this._config.input)].forEach((e=>{e.addEventListener("input",(()=>{this._toggleInputErrors(e),this.toggleSubmitButton()}))}))}enableValidation(){this._setEventListeners(),this._form.addEventListener("submit",(e=>{e.preventDefault()}))}}document.querySelector(".cards__list");const n=document.querySelector("#edit-profile"),s=document.querySelector("#add-card"),i=(n.querySelector(".modal-box__close-button"),s.querySelector(".modal-box__close-button"));document.querySelector(".profile__title"),document.querySelector(".profile__subtitle"),n.querySelector(".form__input_type_name"),n.querySelector(".form__input_type_description"),i.closest(".form");const c=document.querySelector("#edit-profile"),a=document.querySelector(".profile__title"),l=document.querySelector(".profile__subtitle"),u=document.querySelector("#add-card"),d=document.querySelector(".cards__list"),_=document.querySelector(".profile__buttons-edit"),m=document.querySelector(".profile__buttons-add"),p=document.querySelector("#display-image"),h=p.querySelector(".modal-box__image"),f=document.querySelector(".form__input_type_name"),g=document.querySelector(".form__input_type_description"),v={editModal:"#edit-profile",addModal:"#add-card",name:".profile__title",description:".profile__subtitle",form:".form",input:".form__input",submitButton:".form__button",inactiveButton:"form__button_disabled",inputError:"form__input_invalid",error:"form__error_visible"},b=new class extends t{constructor(e,t){super({popup:e}),this._image=t}open(e){const t=this._popup.querySelector(".modal-box__image"),r=this._popup.querySelector(".modal-box__caption"),o=e.name,n=e.link;return r.textContent=o,t.src=n,t.alt=`Preview image for ${o}`,super.open(),e}}(p,h);b.setEventListeners();const y=e=>{b.open(e)},S=new class{constructor(e,t){let{items:r,renderer:o}=e;this._renderedItems=r,this._renderer=o,this.cardBin=t}renderItems(){this._renderedItems.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this.cardBin.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{S.addItem(w(e))}},d);S.renderItems();const E=new class{constructor(e){let{name:t,description:r}=e;this._name=t,this._description=r}getUserInfo(){return{name:this._name.textContent,description:this._description.textContent}}setUserInfo(e){this._name.textContent=e.name,this._description.textContent=e.description}}({name:a,description:l}),q=new r(u,(e=>{S.addItem(w(e))}));q.setEventListeners();const L=new r(c,(e=>{E.setUserInfo(e)}));function w(t){return new e(t,"#card",y).createCard()}L.setEventListeners(),_.addEventListener("click",(function(){L.open();const e=E.getUserInfo();f.value=e.name,g.value=e.description,k.toggleSubmitButton()})),m.addEventListener("click",(function(){q.open(),I.toggleSubmitButton()}));const k=new o(v,c);k.enableValidation();const I=new o(v,u);I.enableValidation()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,